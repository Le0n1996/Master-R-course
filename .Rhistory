graph1
graph1 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = state), size = 3) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")+
theme_classic()
graph1
graph1 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = state), size = 2) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")+
theme_ipsum()
graph1
graph1 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = state), size = 2) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")+
theme_ipsum()
graph1
graph2 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = year), size = 2) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")+
theme_ipsum()
graph2
graph2 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = -year), size = 2) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")+
theme_ipsum()
graph2
graph2 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = year), size = 2) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")+
theme_ipsum()
graph2
graph1 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = state), size = 2) + theme_ipsum() +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")
graph1
graph2 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = year), size = 2) + theme_ipsum() +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate") # legend is here; the darker colours correspond to earlier years
graph2
library(lmtest) # import package for linear models
library(sandwich)
model <- lm(fatalityrate ~ beertax, data = fatrat)
model$coefficients # if we want to see only coefficients for our model
coeftest(model, vcov. = vcovHC) # with heteroskedasticity-robust s.e.
summary(model)
plot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkblue")
abline(model)
ggplot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkblue")
abline(model)
plot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkblue")
abline(model)
plot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkgreen")
abline(model)
plot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkgreen")
abline(model, col = "red")
model2 <- lm(fatalityrate ~ beertax + spircons, data = fatrat)
coeftest(model2, vcov. = vcovHC)
summary(model2)
library(car) # can be used for fast diagnostics
linearHypothesis(model2, c("beertax = 0", "spircons=0"), test = "F", vcov. = vcovHC)
model3 <- lm(fatalityrate ~ beertax + spircons + factor(year), data = fatrat)
coeftest(model3, vcov. = vcovHC)
summary(model3)
fatrat <- mutate(fatrat, fyear = factor(year))
model3 <- lm(fatalityrate ~ beertax + spircons + fyear, data = fatrat)
coeftest(model3, vcov. = vcovHC)
summary(model3)
plot(fatrat$year[2:7], model3$coefficients[4:9], xlab = "Year", ylab = "Time effect",
main = "Time efficiency analysis", col="darkgreen", pch = 20 )
lines(fatrat$year[2:7], model3$coefficients[4:9])
text(fatrat$year[2:7], model3$coefficients[4:9], labels = round(model3$coefficients[4:9], 2), cex = 0.75, pos = 3)
plot(fatrat$fyear[2:7], model3$coefficients[4:9], xlab = "Year", ylab = "Time effect",
main = "Time efficiency analysis", col="darkgreen", pch = 20 )
lines(fatrat$year[2:7], model3$coefficients[4:9])
text(fatrat$year[2:7], model3$coefficients[4:9], labels = round(model3$coefficients[4:9], 2), cex = 0.75, pos = 3)
plot(fatrat$fyear[2:7], model3$coefficients[4:9], xlab = "Year", ylab = "Time effect",
main = "Time efficiency analysis", col="darkgreen", pch = 20 )
lines(fatrat$fyear[2:7], model3$coefficients[4:9])
text(fatrat$fyear[2:7], model3$coefficients[4:9], labels = round(model3$coefficients[4:9], 2), cex = 0.75, pos = 3)
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(mpg_select, aes(displ, cty)) +
labs(subtitle="mpg: Displacement vs City Mileage",
title="Bubble chart")
g + geom_jitter(aes(col=manufacturer, size=hwy)) +
geom_smooth(aes(col=manufacturer), method="lm", se=F)
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(mpg_select, aes(displ, cty)) +
labs(subtitle="mpg: Displacement vs City Mileage",
title="Bubble chart")
g + geom_jitter(aes(col=manufacturer, size=hwy)) +
geom_smooth(aes(col=manufacturer), method="lm", se=F)
mpg_select <- mpg[mpg$manufacturer %in% c("audi", "ford", "honda", "hyundai"), ]
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(mpg_select, aes(displ, cty)) +
labs(subtitle="mpg: Displacement vs City Mileage",
title="Bubble chart")
g + geom_jitter(aes(col=manufacturer, size=hwy)) +
geom_smooth(aes(col=manufacturer), method="lm", se=F)
fatrat$year
plot(fatrat$year[2:7], model3$coefficients[4:9], xlab = "Year", ylab = "Time effect",
main = "Time efficiency analysis", col="darkgreen", pch = 20 )
lines(fatrat$year[2:7], model3$coefficients[4:9])
text(fatrat$year[2:7], model3$coefficients[4:9], labels = round(model3$coefficients[4:9], 2), cex = 0.75, pos = 3)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect",
main = "Time effect", col="darkgreen", pch = 20 )
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 3)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect",
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim=c(-.12,-.01)
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim=c(-0.12,-0.01),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim=c(-0.12,-0.02),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim = c(-0.12,-0.02),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), pos = 1)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim = c(-0.12,-0.02),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 2)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim = c(-0.12,-0.02),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
fatrat <- mutate(fatrat, fstate = factor(state)) # create dummies for state
model4 <- lm(fatalityrate ~ beertax + spircons + fyear + fstate, data = fatrat) # fit model
coeftest(model4, vcov. = vcovHC)
summary(model4)
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() +
geom_point(aes(x = fatrat$beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "") +
theme_ipsum()
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual", size = 2)) +
geom_point() +
geom_point(aes(x = fatrat$beertax, y = model4$fitted.values, color = "Fitted", size = 2)) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "") +
theme_ipsum()
#Plotting:
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() +
geom_point(aes(x = fatrat$beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "") +
theme_ipsum()
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() +
geom_point(aes(x = beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "") +
theme_ipsum()
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() +
geom_point(aes(x = beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "") +
theme_ipsum()
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() +
geom_point(aes(x = beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "") +
theme_ipsum()
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() + theme_ipsum() +
geom_point(aes(x = beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "")
stargazer(model, model2, model3, model4, type = "html", title="Regression Results",
column.labels=c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit=c("factor(year)*", "factor(state)*"),
order=c("Constant", "beertax", "spircons"),
add.lines=list(c("Time effects", "No", "No", "Yes", "Yes"),
c("State fixed effects", "No", "No", "No", "Yes")),
out = "HW_outtable.html", no.space=TRUE)
library(stargazer) # activate
stargazer(model, model2, model3, model4, type = "html", title="Regression Results",
column.labels=c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit=c("factor(year)*", "factor(state)*"),
order=c("Constant", "beertax", "spircons"),
add.lines=list(c("Time effects", "No", "No", "Yes", "Yes"),
c("State fixed effects", "No", "No", "No", "Yes")),
out = "HW_outtable.html", no.space=TRUE)
stargazer(model, model2, model3, model4, type = "html", title="Regression Results",
column.labels=c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit=c("fyear*", "fstate*"),
order=c("Constant", "beertax", "spircons"),
add.lines=list(c("Time effects", "No", "No", "Yes", "Yes"),
c("State fixed effects", "No", "No", "No", "Yes")),
out = "HW_outtable.html", no.space=TRUE)
fatrat <- mutate(fatrat, fstate = factor(state)) # create dummies for state
model4 <- lm(fatalityrate ~ beertax + spircons + fyear + fstate, data = fatrat) # fit model
coeftest(model4, vcov. = vcovHC)
summary(model4)
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"),
add.lines = list(c("Time effects", "No", "No", "Yes", "Yes"),
c("State fixed effects", "No", "No", "No", "Yes")),
out = "HW_outtable.html", no.space=TRUE)
library(stargazer) # activate
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
add.lines = list(c("Time effects", "No", "No", "Yes", "Yes"),
c("State fixed effects", "No", "No", "No", "Yes")),
out = "HW_outtable.html", no.space=TRUE)
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", "No", "No", "Yes", "Yes"),
c("State fixed effects", rep("No", 3), "Yes")),
out = "HW_outtable.html", no.space=TRUE)
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "HW_outtable.html", no.space=TRUE)
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "HW_outtable.html", no.space = TRUE)
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "HW_outtable.html")
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model №1", "Model №2", "Model №3", "Model №4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
model.numbers = FALSE,
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
stargazer(model, model2, model3, model4, type = "html", title = "Regression Results",
model.numbers = FALSE, column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"), # use our names
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
se1 <- sqrt(diag(vcovHC(model)))
se2 <- sqrt(diag(vcovHC(model2)))
se3 <- sqrt(diag(vcovHC(model3)))
se4 <- sqrt(diag(vcovHC(model4)))
stargazer(model, model2, model3, model4, se = list(se1, se2, se3, se4), type = "html", title = "Regression Results",
model.numbers = FALSE, column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"), # use our names
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
fatrat <- mutate(fatrat, fstate = factor(state)) # create dummies for state
model4 <- lm(fatalityrate ~ beertax + spircons + fyear + fstate, data = fatrat) # fit model
coeftest(model4, vcov. = vcovHC)
summary(model4)
fatrat <- mutate(fatrat, fstate = factor(state)) # create dummies for state
model4 <- lm(fatalityrate ~ beertax + spircons + fyear + fstate, data = fatrat) # fit model
coeftest(model4, vcov. = vcovHC)
summary(model4, vcov. = vcovHC)
library(dplyr) # activating dplyr for mutate
fatrat <- mutate(fat, fatalityrate = mrall*10000)
summary(fatrat$fatalityrate)
## Problem 1
library(data.table) # activate
fat <- fread("fatality.csv") # read
View(fat) # look at the dataset
# As we can see, there are 336 observations in total
## Problem 2
library(ggplot2) # activate
library(hrbrthemes) # activate for themes
ggplot(data = fat, aes(x = beertax, y = ..density..)) + # ..density.. is used for combining both histogram & density on one graph
geom_histogram(binwidth = 0.2,                        # set bin width
fill = "yellowgreen", color = "black") +
geom_density(col = "red") + theme_ipsum() +
labs(title = "Beer taxes in American states, in USD",
x = "Beer tax",
y = "Density (frequency)")
## Problem 3
library(dplyr) # activating dplyr for mutate
fatrat <- mutate(fat, fatalityrate = mrall*10000)
summary(fatrat$fatalityrate)
## Problem 4
graph1 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = state), size = 2) + theme_ipsum() +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")
graph1
graph2 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = year), size = 2) + theme_ipsum() +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate") # legend is here; darker colours correspond to earlier years
graph2
## Problem 5
library(lmtest) # import package for linear models
library(sandwich)
model <- lm(fatalityrate ~ beertax, data = fatrat)
model$coefficients # if we want to see only coefficients for our model
coeftest(model, vcov. = vcovHC) # with heteroskedasticity-robust s.e.
summary(model, vcov. = vcovHC)
plot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkgreen")
abline(model, col = "red")
## Problem 6
## Problem 7
library(car) # can be used for fast diagnostics
model2 <- lm(fatalityrate ~ beertax + spircons, data = fatrat) # new model with spircons added
coeftest(model2, vcov. = vcovHC)
summary(model2, vcov. = vcovHC)
linearHypothesis(model2, c("beertax = 0", "spircons=0"), test = "F", vcov. = vcovHC)
## Problem 8
fatrat <- mutate(fatrat, fyear = factor(year)) # create dummies
model3 <- lm(fatalityrate ~ beertax + spircons + fyear, data = fatrat) # using it to fit model
coeftest(model3, vcov. = vcovHC)
summary(model3, vcov. = vcovHC)
# Plotting now:
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim = c(-0.12,-0.02),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
## Problem 9
fatrat <- mutate(fatrat, fstate = factor(state)) # create dummies for state
model4 <- lm(fatalityrate ~ beertax + spircons + fyear + fstate, data = fatrat) # fit model
coeftest(model4, vcov. = vcovHC)
summary(model4, vcov. = vcovHC)
#Plotting:
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() + theme_ipsum() +
geom_point(aes(x = beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "")
## Question 10
library(stargazer) # activate
# We need heteroskedasticity-robust standard errors:
se1 <- sqrt(diag(vcovHC(model)))
se2 <- sqrt(diag(vcovHC(model2)))
se3 <- sqrt(diag(vcovHC(model3)))
se4 <- sqrt(diag(vcovHC(model4))) # calculated
stargazer(model, model2, model3, model4, se = list(se1, se2, se3, se4), type = "html", title = "Regression Results",
model.numbers = FALSE, column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"), # use our names
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
## Question 11
## Problem 1
library(data.table) # activate
fat <- fread("fatality.csv") # read
View(fat) # look at the dataset
# As we can see, there are 336 observations in total
## Problem 2
library(ggplot2) # activate
library(hrbrthemes) # activate for themes
ggplot(data = fat, aes(x = beertax, y = ..density..)) + # ..density.. is used for combining both histogram & density on one graph
geom_histogram(binwidth = 0.2,                        # set bin width
fill = "yellowgreen", color = "black") +
geom_density(col = "red") + theme_ipsum() +
labs(title = "Beer taxes in American states, in USD",
x = "Beer tax",
y = "Density (frequency)")
## Problem 3
library(dplyr) # activating dplyr for mutate
fatrat <- mutate(fat, fatalityrate = mrall*10000)
summary(fatrat$fatalityrate)
## Problem 4
graph1 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = state), size = 2) + theme_ipsum() +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate")
graph1
graph2 <- ggplot(fatrat, aes(x = beertax, y = fatalityrate)) +
geom_point(aes(col = year), size = 2) + theme_ipsum() +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate") # legend is here; darker colours correspond to earlier years
graph2
## Problem 5
library(lmtest) # import package for linear models
library(sandwich)
model <- lm(fatalityrate ~ beertax, data = fatrat)
model$coefficients # if we want to see only coefficients for our model
coeftest(model, vcov. = vcovHC) # with heteroskedasticity-robust s.e.
summary(model, vcov. = vcovHC)
plot(fatrat$beertax, fatrat$fatalityrate, xlab = "Beer tax", ylab = "Fatality rate",
main = "Beer tax efficiency", col="darkgreen")
abline(model, col = "red")
library(car) # can be used for fast diagnostics
model2 <- lm(fatalityrate ~ beertax + spircons, data = fatrat) # new model with spircons added
coeftest(model2, vcov. = vcovHC)
summary(model2, vcov. = vcovHC)
linearHypothesis(model2, c("beertax = 0", "spircons=0"), test = "F", vcov. = vcovHC)
## Problem 8
fatrat <- mutate(fatrat, fyear = factor(year)) # create dummies
model3 <- lm(fatalityrate ~ beertax + spircons + fyear, data = fatrat) # using it to fit model
coeftest(model3, vcov. = vcovHC)
summary(model3, vcov. = vcovHC)
plot(fatrat$year[2:6], model3$coefficients[4:8], xlab = "Year", ylab = "Time effect", ylim = c(-0.12,-0.02),
main = "Time effect", col="darkgreen", pch = 20 ) # as we need years 1983-1987
lines(fatrat$year[2:6], model3$coefficients[4:8])
text(fatrat$year[2:6], model3$coefficients[4:8], labels = round(model3$coefficients[4:8], 2), cex = 0.75, pos = 1)
fatrat <- mutate(fatrat, fstate = factor(state)) # create dummies for state
model4 <- lm(fatalityrate ~ beertax + spircons + fyear + fstate, data = fatrat) # fit model
coeftest(model4, vcov. = vcovHC)
ggplot(fatrat, aes(x = beertax, y = fatalityrate, color = "Actual")) +
geom_point() + theme_ipsum() +
geom_point(aes(x = beertax, y = model4$fitted.values, color = "Fitted")) +
labs(title = "Fatality rate by beer tax",
x = "Beer tax",
y = "Fatality rate",
color = "")
summary(model4, vcov. = vcovHC)
library(stargazer) # activate
# We need heteroskedasticity-robust standard errors:
se1 <- sqrt(diag(vcovHC(model)))
se2 <- sqrt(diag(vcovHC(model2)))
se3 <- sqrt(diag(vcovHC(model3)))
se4 <- sqrt(diag(vcovHC(model4))) # calculated
stargazer(model, model2, model3, model4, se = list(se1, se2, se3, se4), type = "html", title = "Regression Results",
model.numbers = FALSE, column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"), # use our names
omit = c("fyear*", "fstate*"), # omit all with reg.exp
order = c("Constant", "beertax", "spircons"), # otherwise constant is the last one
add.lines = list(c("Time effects", rep("No", 2), rep("Yes", 2)),
c("State fixed effects", rep("No", 3), "Yes")),
out = "Reg_results.html")
